import os
import pandas as pd
import re
import math

project_root = os.path.dirname(__file__)

def load_netfile(name):
    netfile = os.path.join(project_root, "TransportationNetworks", name, f"{name}_net.tntp")
    net = pd.read_csv(netfile, skiprows=8, sep='\t')

    trimmed= [s.strip().lower() for s in net.columns]
    net.columns = trimmed

    # And drop the silly first andlast columns
    net.drop(['~', ';'], axis=1, inplace=True)
    
    # Metadata
    with open(netfile, "r") as f:
        attrs = re.findall("(?m)^\\s*\\<(.*)\\>\\s*(.*\\S)\\s*$", f.read())

    net.attrs = dict(attrs)
    return net

def load_nodefile(name):
    netfile = os.path.join(project_root, "TransportationNetworks", name, f"{name}_node.tntp")
    net = pd.read_csv(netfile,sep='\t')

    trimmed= [s.strip().lower() for s in net.columns]
    net.columns = trimmed

    # And drop the silly first andlast columns
    net.drop([';'], axis=1, inplace=True)

    
    # Metadata
    with open(netfile, "r") as f:
        attrs = re.findall("(?m)^\\s*\\<(.*)\\>\\s*(.*\\S)\\s*$", f.read())

    net.attrs = dict(attrs)
    return net

def write_sumo_nodes(df, filename):
    # Clean up column names
    df.columns = [c.strip().lower().lstrip(';') for c in df.columns]

    # Drop the column with only semicolons (if it exists)
    if ';' in df.columns:
        df.drop([';'], axis=1, inplace=True)

    # Reference point (first node as origin)
    ref_lat = df.iloc[0]["y"]
    ref_lon = df.iloc[0]["x"]
    earth_radius = 6371000  # meters

    def latlon_to_meters(lat, lon):
        lat_rad = math.radians(lat)
        ref_lat_rad = math.radians(ref_lat)
        delta_lat = lat - ref_lat
        delta_lon = lon - ref_lon
        x = delta_lon * (math.pi / 180) * earth_radius * math.cos(ref_lat_rad)
        y = delta_lat * (math.pi / 180) * earth_radius
        return x, y

    with open(filename, "w") as f:
        f.write("<nodes>\n")
        for _, row in df.iterrows():
            x, y = latlon_to_meters(row["y"], row["x"])
            f.write(f'  <node id="{int(row["node"])}" x="{x:.2f}" y="{y:.2f}" />\n')
        f.write("</nodes>\n")

def write_sumo_edges(df, filename):
    df.columns = [col.strip().lower() for col in df.columns]

    with open(filename, "w") as f:
        f.write("<edges>\n")
        for i, row in df.iterrows():
            f.write(f'  <edge id="{i}" from="{int(row["init_node"])}" to="{int(row["term_node"])}" />\n')
        f.write("</edges>\n")
siouxfallsnet = load_netfile("SiouxFalls")
siouxfallsnode = load_nodefile("SiouxFalls")

write_sumo_nodes(siouxfallsnode, "nodes.nod.xml")
write_sumo_edges(siouxfallsnet, "edges.edg.xml")

